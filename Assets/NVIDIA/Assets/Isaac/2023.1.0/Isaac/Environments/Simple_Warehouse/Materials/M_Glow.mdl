mdl 1.3;

import ::math::*;
import ::state::*;
import ::tex::*;
import ::anno::*;
using OmniUe4Function import *;
using OmniUe4Base import *;

export annotation sampler_color();
export annotation sampler_normal();
export annotation sampler_grayscale();
export annotation sampler_alpha();
export annotation sampler_masks();
export annotation sampler_distancefield();
export annotation dither_masked_off();
export annotation world_space_normal();

export material M_Glow(
	float4 EmissiveColor = float4(0.28835,0.365,0.365,1.0),
	float EmissiveStrength = 10.0)
 = 
	let {
	float3 WorldPositionOffset_mdl = float3(0.0,0.0,0.0);


	float3 Normal_mdl = float3(0.0,0.0,1.0);

	float3 Local0 = (float3(EmissiveColor.x,EmissiveColor.y,EmissiveColor.z) * EmissiveStrength);

	float3 EmissiveColor_mdl = Local0;
	float OpacityMask_mdl = 1.0;
	float3 BaseColor_mdl = float3(0.0,0.0,0.0);
	float Metallic_mdl = 0.0;
	float Specular_mdl = 0.5;
	float Roughness_mdl = 0.5;

	} in
		::OmniUe4Base(
			base_color: BaseColor_mdl,
			metallic: Metallic_mdl,
			roughness: Roughness_mdl,
			specular: Specular_mdl,
			normal: Normal_mdl,
			opacity: OpacityMask_mdl,
			emissive_color: EmissiveColor_mdl,
			displacement: WorldPositionOffset_mdl,
			two_sided: false);
